from src.RecommendationService import extractVector
from src.NlpSys.nlp_controller import nlp_for_user
from src.Classes.DescriptionTypeClass import DescType

"""
    Represents a description obtained from a user when generating a recommendation request

     
"""

class Description:
    """
    Initialises a new instance of the Description class.

    Parameters:
        sentence (str) a sentence to be inptted into the NLP system
        desc_type(DescType) identifies if the description os from a User or Skill
        vector_metric (VectorMetric) identifies the approach to be used to vectorise the item
        keywords (Array) Array of keywords generated from the description by the NLP
    """
    def __init__(self, sentence, desc_type: DescType, vector_metric,model, keywords=None):
        self.sentence = sentence
        self.desc_type = desc_type
        if self.desc_type == DescType.User:
            self.keywords = nlp_for_user(self.sentence)
        else:
            self.keywords = keywords
        self.vector = extractVector(self.keywords, vector_metric, model)

    """
        Converts the Description instance to a dictionary format, used as a JOSN object

        Returns:
            dict: A dictionary with the sentence, desc_type, vector used and keywords generated by the NLP
        """
    def to_dict(self):
        return {"sentence": self.sentence,
                "desc_type": self.desc_type,
                "vector": self.vector,
                "keywords": self.keywords
    }

    """Retreives the keywords from the description object
    """  
    def get_keywords(self):
        return self.keywords
    """Retreives the vector from the description object
    """
    def get_vector(self):
        return self.vector

    """Retrieves the sentence from the description object
    """
    def get_description_sentence(self):
        return self.sentence